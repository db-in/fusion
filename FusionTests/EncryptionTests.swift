//
//  Created by Diney Bomfim on 09/06/2023.
//

import XCTest
@testable import Fusion

// MARK: - Definitions -

// MARK: - Type -

class EncryptionTests: XCTestCase {

	func testEncryptBase64() {
		let string = "Hello, World!"
		let encryptedString = string.encryptBase64
		XCTAssertEqual(encryptedString, "SGVsbG8sIFdvcmxkIQ==")
	}

	func testDecryptBase64() {
		let encryptedString = "SGVsbG8sIFdvcmxkIQ=="
		let decryptedString = encryptedString.decryptBase64
		XCTAssertEqual(decryptedString, "Hello, World!")
	}

	func testEncryptBase64By() {
		let string = "Hello, World!"
		let encryptionCount = 3
		let encryptedString = string.encryptBase64(by: encryptionCount)
		XCTAssertEqual(encryptedString, "VTBkV2MySkhPSE5KUm1SMlkyMTRhMGxSUFQwPQ==")
	}

	func testDecryptBase64By() {
		let encryptedString = "VTBkV2MySkhPSE5KUm1SMlkyMTRhMGxSUFQwPQ=="
		let decryptionCount = 3
		let decryptedString = encryptedString.decryptBase64(by: decryptionCount)
		XCTAssertEqual(decryptedString, "Hello, World!")
	}
}

class SequenceEncryptionTests: XCTestCase {

	func testHex() {
		let sequence: [UInt8] = [0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x21]
		let hexString = sequence.hex
		XCTAssertEqual(hexString, "48656c6c6f2c20576f726c6421")
	}
}

class DataEncryptionTests: XCTestCase {

	func testSHA256() {
		let data = "Hello, World!".data(using: .utf8)!
		let digest = data.sha256()
		let expectedDigest: [UInt8] = [
			0xDF, 0xFD, 0x60, 0x21, 0xBB, 0x2B, 0xD5, 0xB0, 0xAF, 0x67, 0x62,
			0x90, 0x80, 0x9E, 0xC3, 0xA5, 0x31, 0x91, 0xDD, 0x81, 0xC7, 0xF7,
			0x0A, 0x4B, 0x28, 0x68, 0x8A, 0x36, 0x21, 0x82, 0x98, 0x6F
		]
		XCTAssertEqual(digest, expectedDigest)
	}

	func testHMACSHA512() {
		let key = "SecretKey"
		let data = "Hello, World!".data(using: .utf8)!
		let digest = data.hmacSHA512(key: key)
		let expectedDigest: [UInt8] = [
			0x0A, 0x76, 0xF1, 0x9D, 0x15, 0x8A, 0xAC, 0x9B, 0x7B, 0xD4, 0x69,
			0x54, 0xAA, 0x50, 0x25, 0x18, 0x95, 0xE8, 0xAE, 0x1B, 0xA4, 0xD0,
			0x9D, 0x0D, 0x0C, 0x0D, 0x1C, 0x2E, 0x43, 0x39, 0x99, 0x0A, 0xCA,
			0x3E, 0x5F, 0xE2, 0xE7, 0xC9, 0xF3, 0x37, 0xC2, 0xC8, 0xAB, 0xDA,
			0x7F, 0x45, 0xD0, 0xCB, 0x9C, 0x2C, 0xF5, 0xFF, 0x55, 0x0A, 0x76,
			0x7E, 0x20, 0x83, 0xD8, 0xD1, 0x2F, 0x62, 0x43, 0x5D
		]
		XCTAssertEqual(digest, expectedDigest)
	}
	
	func testSHA512() {
		let testData = Data("Hello, World!".utf8)
		let digest = testData.sha512()

		let expectedDigest: [UInt8] = [
			0x37, 0x4D, 0x79, 0x4A, 0x95, 0xCD, 0xCF, 0xD8, 0xB3, 0x59, 0x93,
			0x18, 0x5F, 0xEF, 0x9B, 0xA3, 0x68, 0xF1, 0x60, 0xD8, 0xDA, 0xF4,
			0x32, 0xD0, 0x8B, 0xA9, 0xF1, 0xED, 0x1E, 0x5A, 0xBE, 0x6C, 0xC6,
			0x92, 0x91, 0xE0, 0xFA, 0x2F, 0xE0, 0x00, 0x6A, 0x52, 0x57, 0x0E,
			0xF1, 0x8C, 0x19, 0xDE, 0xF4, 0xE6, 0x17, 0xC3, 0x3C, 0xE5, 0x2E,
			0xF0, 0xA6, 0xE5, 0xFB, 0xE3, 0x18, 0xCB, 0x03, 0x87
		]
		XCTAssertEqual(digest, expectedDigest)
	}
}
